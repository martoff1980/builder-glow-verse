{"version":3,"file":"node-build.mjs","sources":["../../server/routes/demo.ts","../../server/routes/rumors.ts","../../server/index.ts","../../server/node-build.ts"],"sourcesContent":["import { RequestHandler } from \"express\";\nimport { DemoResponse } from \"@shared/api\";\n\nexport const handleDemo: RequestHandler = (req, res) => {\n  const response: DemoResponse = {\n    message: \"Hello from Express server\",\n  };\n  res.status(200).json(response);\n};\n","import { RequestHandler } from \"express\";\nimport { z } from \"zod\";\nimport { CreateRumorRequest, CreateRumorResponse } from \"@shared/api\";\n\nconst schema = z.object({\n  content: z.string().min(3).max(200),\n  credibility: z.number().min(0).max(1),\n  target: z.string().min(1).max(20).optional().nullable(),\n});\n\nconst banned = [\"інсайд\", \"інсайдер\", \"маніпуляц\", \"фрод\", \"шахрай\"];\n\nexport const handleCreateRumor: RequestHandler = (req, res) => {\n  const parsed = schema.safeParse(req.body as CreateRumorRequest);\n  if (!parsed.success) {\n    return res.status(400).json({ error: parsed.error.flatten() });\n  }\n  const { content, credibility, target } = parsed.data;\n\n  const lower = content.toLowerCase();\n  const flagged = banned.some((w) => lower.includes(w));\n\n  // Simple server-side adjustment: very short rumors reduce credibility\n  const lengthPenalty = Math.max(0, 1 - content.trim().length / 100) * 0.15;\n  const credibilityAdj = Math.max(0, Math.min(1, +(credibility - lengthPenalty).toFixed(2)));\n\n  const resp: CreateRumorResponse = {\n    id: `${Date.now()}-${Math.random().toString(36).slice(2, 8)}`,\n    content: content.trim(),\n    credibility: credibilityAdj,\n    target: target ?? null,\n    flagged,\n    notes: flagged ? \"Може містити чутливу інформацію — дотримуйтесь закону.\" : undefined,\n  };\n\n  res.json(resp);\n};\n","import \"dotenv/config\";\nimport express from \"express\";\nimport cors from \"cors\";\nimport { handleDemo } from \"./routes/demo\";\nimport { handleCreateRumor } from \"./routes/rumors\";\n\nexport function createServer() {\n  const app = express();\n\n  // Middleware\n  app.use(cors());\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true }));\n\n  // Example API routes\n  app.get(\"/api/ping\", (_req, res) => {\n    const ping = process.env.PING_MESSAGE ?? \"ping\";\n    res.json({ message: ping });\n  });\n\n  app.get(\"/api/demo\", handleDemo);\n  app.post(\"/api/rumors\", handleCreateRumor);\n\n  return app;\n}\n","import path from \"path\";\nimport { createServer } from \"./index\";\nimport * as express from \"express\";\n\nconst app = createServer();\nconst port = process.env.PORT || 3000;\n\n// In production, serve the built SPA files\nconst __dirname = import.meta.dirname;\nconst distPath = path.join(__dirname, \"../spa\");\n\n// Serve static files\napp.use(express.static(distPath));\n\n// Handle React Router - serve index.html for all non-API routes\n// app.get(\"/*\", (req, res) => {\n//   // Don't serve index.html for API routes\n//   if (req.path.startsWith(\"/api/\") || req.path.startsWith(\"/health\")) {\n//     return res.status(404).json({ error: \"API endpoint not found\" });\n//   }\n\n//   res.sendFile(path.join(distPath, \"index.html\"));\n// });\n\napp.get(\"/*\", (req, res) => {\n  if (req.path.startsWith(\"/api\") || req.path.startsWith(\"/health\")) {\n    return res.status(404).json({ error: \"API endpoint not found\" });\n  }\n  res.sendFile(path.join(distPath, \"index.html\"));\n});\n\napp.listen(port, () => {\n  console.log(`🚀 Fusion Starter server running on port ${port}`);\n  console.log(`📱 Frontend: http://localhost:${port}`);\n  console.log(`🔧 API: http://localhost:${port}/api`);\n});\n\n// Graceful shutdown\nprocess.on(\"SIGTERM\", () => {\n  console.log(\"🛑 Received SIGTERM, shutting down gracefully\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGINT\", () => {\n  console.log(\"🛑 Received SIGINT, shutting down gracefully\");\n  process.exit(0);\n});\n"],"names":["app","express"],"mappings":"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"}